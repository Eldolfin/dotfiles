# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4
set $statuscmd i3blocks
set $scripts ~/.config/i3/scripts
set $primary_mon HDMI-0
set $other_mon DVI-D-0

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
## exec --no-startup-id xss-lock -l -- ~/.config/i3/lock.sh

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# my tilde key is broken, so I use F6 instead
bindsym --release  XF86AudioNext exec --no-startup-id xdotool key 0x0060
bindsym --release Shift+XF86AudioNext exec --no-startup-id xdotool key 0xfe53

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec alacritty
{{ if or (eq .chezmoi.hostname "nixos-tour") (eq .chezmoi.hostname "nixos-portable") -}}
# start librewolf
bindsym $mod+w exec librewolf
bindsym $mod+Shift+w exec librewolf --private-window
{{ else -}}
bindsym $mod+w exec firefox
bindsym $mod+Shift+w exec firefox --private-window
{{ end -}}
# start nvim
bindsym $mod+n exec alacritty -e nvim

# start dmenu (a program launcher)
bindsym $mod+d exec --no-startup-id rofi -show drun
# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec "rofi -modi drun,run -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
# bindsym $mod+h split h

# split in vertical orientation
# bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
# bindsym $mod+s layout stacking
bindsym $mod+z layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+q focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# kill focused window
bindsym $mod+Shift+Q kill

bindsym $mod+Tab workspace back_and_forth

# switch to monitor
bindsym $mod+p focus output $primary_mon
bindsym $mod+s focus output $other_mon

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# move focused window and swap to that screen
bindsym $mod+Control+1 move container to workspace $ws1; workspace $ws1
bindsym $mod+Control+2 move container to workspace $ws2; workspace $ws2
bindsym $mod+Control+3 move container to workspace $ws3; workspace $ws3
bindsym $mod+Control+4 move container to workspace $ws4; workspace $ws4
bindsym $mod+Control+5 move container to workspace $ws5; workspace $ws5
bindsym $mod+Control+6 move container to workspace $ws6; workspace $ws6
bindsym $mod+Control+7 move container to workspace $ws7; workspace $ws7
bindsym $mod+Control+8 move container to workspace $ws8; workspace $ws8
bindsym $mod+Control+9 move container to workspace $ws9; workspace $ws9
bindsym $mod+Control+0 move container to workspace $ws10; workspace $ws10

# Move workspaces betweeen monitors
bindsym $mod+Control+p move workspace to output $primary_mon
bindsym $mod+Control+s move workspace to output $other_mon
bindsym $mod+Control+h move workspace to output left
bindsym $mod+Control+j move workspace to output down
bindsym $mod+Control+k move workspace to output up
bindsym $mod+Control+l move workspace to output right

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
# bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"
bindsym $mod+Shift+e exec "rofi -show p -modi p:'rofi-power-menu'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym m resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {

  {{ if eq .chezmoi.hostname "nixos-tour" -}}
  tray_output $primary_mon
  {{ end -}}
    # output $primary_mon
    # output $other_mon

    position top
    status_command $statuscmd
}

# Multi-screen screenshots with scrot
bindsym --release Print exec scrot 'screenshot_%Y%m%d_%H%M%S.png' -e 'mkdir -p ~/Pictures/screenshots && mv $f ~/Pictures/screenshots && xclip -selection clipboard -t image/png -i ~/Pictures/screenshots/`ls -1 -t ~/Pictures/screenshots | head -1`' # All screens

# OSX-like area selection screenshots
bindsym --release Shift+Print exec flameshot gui

# i3lock on <mod>+x
bindsym $mod+x exec --no-startup-id $scripts/lock.sh


{{ if eq .chezmoi.hostname "nixos-tour" -}}

# screen order
exec --no-startup-id xrandr --output $primary_mon --primary --mode 1920x1080 --pos 0x630 --rotate normal --rate 144 --output $other_mon --mode 1920x1200 --pos 2000x0 --rotate left

# adjust workspace too
exec --no-startup-id i3-msg 'workspace 2; move workspace to output $other_mon'
exec --no-startup-id i3-msg 'workspace 1; move workspace to output $primary_mon'

bindsym $mod+Shift+s exec $scripts/i3-display-swap.sh

{{ end -}}


# clipboard manager
bindsym $mod+v exec --no-startup-id copyq show
for_window [instance="copyq"] floating enable
exec copyq

# brightness
bindsym XF86MonBrightnessUp exec --no-startup-id brightnessctl s -e 8%+
bindsym XF86MonBrightnessDown exec --no-startup-id brightnessctl s -e 8%-

# bluetooth applet
exec --no-startup-id /usr/bin/blueman-applet

# Media player controls
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioPause exec playerctl play-pause

# emoji picker
exec --no-startup-id emote

# low battery pop-up
exec --no-startup-id i3-battery-popup

# sound effects
bindsym $mod+Shift+Return exec --no-startup-id aplay ~/.sounds/boom.wav

set $volumepath ~/.config/i3/scripts/i3-volume
set $statussig SIGUSR1
set $volumestep 5
set $volumeargs -P -n -t $statuscmd -u $statussig

# Using pulseaudio-utils (append "-s $sinkname" without quotes to override default sink)
# volume keys are shifted right because F2 is broken on my laptop
{{ if eq .chezmoi.hostname "nixos-tour" -}}
bindsym XF86AudioRaiseVolume        exec --no-startup-id $volumepath/volume $volumeargs up $volumestep -y
bindsym XF86AudioLowerVolume exec --no-startup-id $volumepath/volume $volumeargs down $volumestep -y
bindsym XF86AudioMute        exec --no-startup-id $volumepath/volume $volumeargs mute -y
{{ else if eq .chezmoi.hostname "nixos-portable" -}}
bindsym F3 exec --no-startup-id USE_AMIXER=1 $volumepath/volume $volumeargs down $volumestep -y
bindsym F4 exec --no-startup-id USE_AMIXER=1 $volumepath/volume $volumeargs up $volumestep -y
{{ end -}}

# stars picom composite manager
# exec --no-startup-id picom -b # too slow when gaming :(

# puts a random background
exec --no-startup-id ~/.config/i3/scripts/update_background.sh

# start redshift
exec --no-startup-id redshift-gtk


bindsym $mod+b exec --no-startup-id rofi-bluetooth

{{ if eq .chezmoi.hostname "nixos-tour" -}}
#exec --no-startup-id mullvad-vpn

exec --no-startup-id sudo ckb-next-daemon
exec --no-startup-id ckb-next -b

# kde connect
# exec --no-startup-id kdeconnect-indicator
# the daemon for kdeconnect :(
# exec --no-startup-id dbus-daemon --session --address="unix:path=$XDG_RUNTIME_DIR/bus" &
{{ end -}}

# hide window decorations
# default_border none
# i3 gaps
# for_window [class="^.*"] border pixel 2
# gaps outer 3
# gaps inner 7

# toggle lamp
# bindsym $mod+y exec timeout 0.5 mosquitto_pub -h 192.168.1.1 -t 'cmnd/tasmota_C1EEA3/Power' -m 'TOGGLE' || curl 'http://192.168.1.31/cm?cmnd=POWER+TOGGLE'
