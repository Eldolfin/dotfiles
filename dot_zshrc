# Personal Zsh configuration file. It is strongly recommended to keep all
# shell customization and configuration (including exported environment
# variables such as PATH) in this file or in files sourced from it.
#
# Documentation: https://github.com/romkatv/zsh4humans/blob/v5/README.md.

# Periodic auto-update on Zsh startup: 'ask' or 'no'.
# You can manually run `z4h update` to update everything.
zstyle ':z4h:' auto-update      'ask'
# Ask whether to auto-update this often; has no effect if auto-update is 'no'.
zstyle ':z4h:' auto-update-days '28'

# Keyboard type: 'mac' or 'pc'.
zstyle ':z4h:bindkey' keyboard  'pc'

# Don't start tmux.
zstyle ':z4h:' start-tmux       no

# Mark up shell's output with semantic information.
zstyle ':z4h:' term-shell-integration 'yes'

# Right-arrow key accepts one character ('partial-accept') from
# command autosuggestions or the whole thing ('accept')?
zstyle ':z4h:autosuggestions' forward-char 'accept'

# Recursively traverse directories when TAB-completing files.
zstyle ':z4h:fzf-complete' recurse-dirs 'yes'

# Enable direnv to automatically source .envrc files.
zstyle ':z4h:direnv'         enable 'no'
# Show "loading" and "unloading" notifications from direnv.
zstyle ':z4h:direnv:success' notify 'yes'

# Enable ('yes') or disable ('no') automatic teleportation of z4h over
# SSH when connecting to these hosts.
# zstyle ':z4h:ssh:*'                   enable yes
zstyle ':z4h:ssh:*'                   enable no

# Send these files over to the remote host when connecting over SSH to the
# enabled hosts.
zstyle ':z4h:ssh:*' send-extra-files '~/.nanorc' '~/.env.zsh'

# Clone additional Git repositories from GitHub.
#
# This doesn't do anything apart from cloning the repository and keeping it
# up-to-date. Cloned files can be used after `z4h init`. This is just an
# example. If you don't plan to use Oh My Zsh, delete this line.
z4h install ohmyzsh/ohmyzsh || return

# Install or update core components (fzf, zsh-autosuggestions, etc.) and
# initialize Zsh. After this point console I/O is unavailable until Zsh
# is fully initialized. Everything that requires user interaction or can
# perform network I/O must be done above. Everything else is best done below.
z4h init || return

# Extend PATH.
path=(~/bin $HOME/bin /usr/local/bin /home/oscar/.cargo/bin/ /home/oscar/.local/bin $PATH /home/oscar/.npm-global/bin $path)
EDITOR="nvim"

SKIM_DEFAULT_COMMAND="fd --type f"

# Export environment variables.
export GPG_TTY=$TTY

# Source additional local files if they exist.
z4h source ~/.env.zsh

# Use additional Git repositories pulled in with `z4h install`.
#
# This is just an example that you should delete. It does nothing useful.
# z4h source ohmyzsh/ohmyzsh/lib/diagnostics.zsh  # source an individual file
# z4h load   ohmyzsh/ohmyzsh/plugins/emoji-clock  # load a plugin
source ~/.zsh/plugins/nix-shell/nix-shell.plugin.zsh

# Define key bindings.
z4h bindkey z4h-backward-kill-word  Ctrl+Backspace     Ctrl+H
z4h bindkey z4h-backward-kill-zword Ctrl+Alt+Backspace

z4h bindkey undo Ctrl+/ Shift+Tab  # undo the last command line change
z4h bindkey redo Alt+/             # redo the last undone command line change

z4h bindkey z4h-cd-back    Alt+Left   # cd into the previous directory
z4h bindkey z4h-cd-forward Alt+Right  # cd into the next directory
z4h bindkey z4h-cd-up      Alt+Up     # cd into the parent directory
z4h bindkey z4h-cd-down    Alt+Down   # cd into a child directory

# Autoload functions.
autoload -Uz zmv

# Add flags to existing aliases.
# alias ls="${aliases[ls]:-ls} -A"

# aliases


v() {
    choice=$( sk -1 --preview 'bat --color=always --plain {1}' -q "$*" --preview-window right:75%  )
    # fd --type f --hidden --exclude .git --size -100k | 
    # fzf-tmux -p 80%,80% --reverse -q "$*" -1 -0 --preview='bat --color=always --plain {}' --preview-window=down --scheme=history)
    if [ -n "$choice" ]; then
        nvim $choice
    fi
}
neovide-tweaked () {
    (neovide "$@" --nofork --multigrid && clone)&!;exit
}
alias clone="alacritty -e zsh -c \"cd \$(pwd); zsh -i\"&!"
#alias nvim=neovide-tweaked
alias vim=nvim
alias vi=vim
alias svi="sudo -E -s nvim"
alias vimdiff="nvim -d"
alias htop=btop
alias top=btop
alias ls=exa
alias tree="exa --tree"
alias make="make -j"
alias poly="./.apps/PolyMC-Linux-1.4.3-x86_64.AppImage"
alias gupd="git add .; git commit -m \"update\"; git push"
alias bell="tput bel"
alias ll="ls -alh"
alias cat="bat --plain"
alias la="timeout 0.5 mosquitto_pub -h 192.168.1.1 -t 'cmnd/tasmota_C1EEA3/Power' -m 'TOGGLE' || curl 'http://192.168.1.31/cm?cmnd=POWER+TOGGLE'"
alias tlr="tldr --list | sk --preview 'tldr {1} --color=always' --preview-window right:75% | xargs tldr -q"
alias black='xsetroot -solid "#000000"'
dodo() {
  # wait for network to be available
  while ! ifconfig | grep -F "192.168.1." > /dev/null; do;done
  # shutdown computer and lamp
  ssh -o ConnectTimeout=5 oscar@192.168.1.7 'sudo shutdown 0' & curl 'http://192.168.1.31/cm?cmnd=POWER+OFF'
  wait
  exit
}
mkcd () {
  mkdir -p $@ && cd ${@:$#}
}

# alias from plugins

# git
alias gl='git pull'
alias gp="git push --verbose"
alias gcl='git clone --recurse-submodules'
alias gst="git status --short"
alias gup="git pull --rebase"
alias gsta"git stash push"
alias gstp="git stash pop"
alias gaa="git add --all"
alias ga="git add"
alias gpv="git push -v"
alias gcsm="git commit -S -m"

# cpv == rsync with good args
cpv() {
    rsync -pogbr -hhh --backup-dir="/tmp/rsync-${USERNAME}" -e /dev/null --progress "$@"
}

# pacman
alias pacin="sudo pacman -S"
alias pacupd="sudo pacman -Syu"

# fancy ctrl z for switching between vim/terminal
fancy-ctrl-z () {
  if [[ $#BUFFER -eq 0 ]]; then
    BUFFER="fg"
    zle accept-line -w
  else
    zle push-input -w
    zle clear-screen -w
  fi
}
zle -N fancy-ctrl-z
bindkey '^Z' fancy-ctrl-z


# home manager

FILE="$HOME/.nix-profile/etc/profile.d/hm-session-vars.sh"

if test -f "$FILE"; then
. "$FILE"
fi


# zoxide (better autojump)
eval "$(zoxide init zsh)"

# Set shell options: http://zsh.sourceforge.net/Doc/Release/Options.html.
setopt glob_dots     # no special treatment for file names with a leading dot
# setopt no_auto_menu  # require an extra TAB press to open the completion menu


# Load Angular CLI autocompletion.
# source <(ng completion script)
